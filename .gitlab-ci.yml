default:
  image: ubuntu:22.04

# Run these commands before all jobs
before_script:
  - DEBIAN_FRONTEND=noninteractive apt-get update -y
  - DEBIAN_FRONTEND=noninteractive apt-get install -y git curl ssh catch

# If all tests pass, deploy.
stages:
  - build-and-test
  - package-and-deploy

################################################################################
# Job to build and run tests
################################################################################
build-and-test:
  tags:
    - docker
  stage: build-and-test
  only:
    - master
    - devel

  script:
    - git clone https://gitlab-deploy-token:${BOOTSTRAP_DEPLOY_TOKEN}@git.sift.net/jharwell/bootstrap.git
    - cd bootstrap

    - ./bootstrap.sh
      --rprefix=$HOME/.local
      --rroot=.
      --disablerepo rcsw
      --disablerepo rcppsw
      --disablerepo cosm
      --disablerepo fordyca
      --disablerepo argos
      --disablerepo sierra
      --disablerepo titerra
      --force
      --syspkgs

    - cd ..
    - git submodule set-url libra ../libra.git
    - git submodule sync --recursive
    - git submodule foreach --recursive git fetch
    - git submodule update --init

    - mkdir -p build && cd build

    - cmake
      -DCMAKE_INSTALL_PREFIX=$HOME/.local
      -DCMAKE_BUILD_TYPE=DEV
      -DLIBRA_TESTS=yes
      -DLIBRA_ER=ALL
      ..

    - make build-and-test

################################################################################
# Jobs to build and upload packages
################################################################################
package-and-deploy:
  stage:
    package-and-deploy

  tags:
    - docker

  only:
    - master
    - devel

  script:
    - git clone https://gitlab-deploy-token:${BOOTSTRAP_DEPLOY_TOKEN}@git.sift.net/jharwell/bootstrap.git
    - cd bootstrap

    - ./bootstrap.sh
      --rprefix=$HOME/.local
      --rroot=.
      --disablerepo rcsw
      --disablerepo rcppsw
      --disablerepo cosm
      --disablerepo fordyca
      --disablerepo argos
      --disablerepo sierra
      --disablerepo titerra
      --force
      --syspkgs
    - cd ..

    - git submodule set-url libra ../libra.git
    - git submodule sync --recursive
    - git submodule foreach --recursive git fetch
    - git submodule update --init

    - mkdir -p build && cd build

    - cmake
      -DCMAKE_INSTALL_PREFIX=$HOME/.local
      -DCMAKE_BUILD_TYPE=DEV
      -DLIBRA_TESTS=yes
      -DLIBRA_ER=ALL
      ..

    - make package
    - VERSION_MAJOR=$(sed -nE 's/.*PROJECT_VERSION_MAJOR ([0-9]+).*/\1/p' ../cmake/project-local.cmake)
    - VERSION_MINOR=$(sed -nE 's/.*PROJECT_VERSION_MINOR ([0-9]+).*/\1/p' ../cmake/project-local.cmake)
    - VERSION_PATCH=$(sed -nE 's/.*PROJECT_VERSION_PATCH ([0-9]+).*/\1/p' ../cmake/project-local.cmake)
    - PACKAGE_VERSION=$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH
    - RCSW_DEB_PACKAGE=$(ls *.deb)
    - RCSW_TGZ_PACKAGE=$(ls *.tar.gz)

    - PACKAGE_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/rcsw/${PACKAGE_VERSION}"
    - |
        curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ${RCSW_DEB_PACKAGE} ${PACKAGE_REGISTRY_URL}/${RCSW_DEB_PACKAGE}
    - |
        curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ${RCSW_TGZ_PACKAGE} ${PACKAGE_REGISTRY_URL}/${RCSW_TGZ_PACKAGE}

    - BETA_TAG_VERSION=v$PACKAGE_VERSION.beta
    - BETA_TAG_MESSAGE="Development release $BETA_TAG_VERSION"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git remote set-url origin https://oauth2:${JHARWELL_CI_TOKEN}@git.sift.net/${CI_PROJECT_PATH}
    - git remote -v
    - git tag $BETA_TAG_VERSION -m "$BETA_TAG_MESSAGE"
    - git push origin $BETA_TAG_VERSION

    - curl --location --output /usr/local/bin/release-cli "https://gitlab.com/api/v4/projects/gitlab-org%2Frelease-cli/packages/generic/release-cli/latest/release-cli-linux-amd64"
    - chmod +x /usr/local/bin/release-cli
    - echo "release-cli create --name "${BETA_TAG_MESSAGE}" --tag-name $CI_COMMIT_TAG --assets-link "{\"name\":\"${RCSW_TGZ_PACKAGE}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${RCSW_TGZ_PACKAGE}\"}" --assets-link"{\"name\":\"${RCSW_DEB_PACKAGE}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${RCSW_DEB_PACKAGE}\"}""
    - release-cli
      create
      --name "${BETA_TAG_MESSAGE}"
      --tag-name ${BETA_TAG_VERSION}
      --assets-link "{\"name\":\"${RCSW_TGZ_PACKAGE}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${RCSW_TGZ_PACKAGE}\"}"
      --assets-link "{\"name\":\"${RCSW_DEB_PACKAGE}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${RCSW_DEB_PACKAGE}\"}"

################################################################################
# Job to build documentation
################################################################################
pages:
  stage: package-and-deploy
  tags:
    - docker

  only:
    - master
    - devel

  script:
    - git clone https://gitlab-deploy-token:${BOOTSTRAP_DEPLOY_TOKEN}@git.sift.net/jharwell/bootstrap.git
    - cd bootstrap

    - ./bootstrap.sh
      --rprefix=$HOME/.local
      --rroot=.
      --disablerepo rcsw
      --disablerepo rcppsw
      --disablerepo cosm
      --disablerepo fordyca
      --disablerepo argos
      --disablerepo sierra
      --disablerepo titerra
      --force
      --syspkgs

    - cd ..
    - git submodule set-url libra ../libra.git
    - git submodule sync --recursive
    - git submodule foreach --recursive git fetch
    - git submodule update --init

    - mkdir -p build && cd build

    - cmake
      -DCMAKE_INSTALL_PREFIX=$HOME/.local
      -DCMAKE_BUILD_TYPE=DEV
      ..
    - make apidoc

    - cd ..
    - export PATH=$PATH:$HOME/.local/bin
    - cd docs && make html && cd ..
    - cp -r docs/_build/html/ ./public/

  artifacts:
    paths:
      - public
